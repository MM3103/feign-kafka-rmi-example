version: "3.7"

networks:
  kafka-net:
    name: kafka-net
    driver: bridge

services:
  grafana:
    build: './config/grafana'
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - kafka-net
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - kafka-net
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "2181:2181"
  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"
  keycloak-dev:
    image: jboss/keycloak:16.1.0
    ports:
      - 8080:8080
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_FRONTEND_URL: "http://localhost:8080/auth"
    command:
      - "-b 0.0.0.0"
      - "-Dkeycloak.import=/tmp/keycloak/realm.json"
    volumes:
      - ./keycloak:/tmp/keycloak
    networks:
      - kafka-net
  feign-kafka-rmi-first-app:
    build: './feign-kafka-rmi-first-app'
    ports:
      - 8484:8484
    environment:
      - FIRST_NAME=feign-kafka-rmi-first-app
      - SECOND_URL=http://feign-kafka-rmi-second-app:8485
      - SECOND_NAME:feign-kafka-rmi-second-app
      - KAFKA_SERVER=kafka:9092
    depends_on:
      - keycloak-dev
      - kafka
      - zookeeper
      - feign-kafka-rmi-second-app
    networks:
      - kafka-net
  feign-kafka-rmi-second-app:
    build: './feign-kafka-rmi-second-app'
    ports:
      - 8485:8485
    environment:
      - KEYCLOAK_URL=http://keycloak-dev:8080/auth
      - KEYCLOAK_REALM=my_realm
      - KEYCLOAK_RESOURCE=my_client
      - KAFKA_SERVER=kafka:9092
    depends_on:
      - keycloak-dev
      - kafka
      - zookeeper
    networks:
      - kafka-net